{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","itemPost","itemAvatar","src","avatar","alt","itemText","itemName","name","itemMessenger","message","itemTime","timeMessage","messageData","HW1","Affair","priorityClasses","classes","AffairItem","affair","priority","AffairWrapper","title","RemoveButton","onClick","deleteAffairCallback","id","Affairs","mappedAffairs","data","map","a","key","onAllFilter","filter","active","onHighFilter","onMiddleFilter","onLowFilter","AffairsContainer","AffairsHeader","MappedAffairs","TaskButton","setFilter","defaultAffairs","v1","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","t","deleteAffair","Greeting","users","error","onTitleChange","onKeyPressAddItem","onAddItemClick","setError","inputClass","nameInput","input","onBlur","type","value","onChange","onKeyPress","nameButton","errorMessage","countName","length","GreetingContainer","addUserCallback","setName","trim","alert","sayHallo","e","currentTarget","charCode","HW3","setUsers","greetingContainer","recordName","_id","SuperInputText","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","disabled","finalClassName","redButton","defaultButton","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","placeholder","blue","App","appWrapper","container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7e63c5e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AffairsHeader\":\"Affairs_AffairsHeader__CtQ2u\",\"AffairsContainer\":\"Affairs_AffairsContainer__bJZw8\",\"MappedAffairs\":\"Affairs_MappedAffairs__vFlNu\",\"AffairWrapper\":\"Affairs_AffairWrapper__bqONY\",\"AffairItem\":\"Affairs_AffairItem__3u45e\",\"RemoveButton\":\"Affairs_RemoveButton__SpGBX\",\"TaskButton\":\"Affairs_TaskButton__2-8WF\",\"active\":\"Affairs_active__3Kjws\",\"High\":\"Affairs_High__1raG7\",\"Middle\":\"Affairs_Middle__2vMCt\",\"Low\":\"Affairs_Low__2V8EP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingContainer\":\"Greeting_greetingContainer__3QW9O\",\"error\":\"Greeting_error__2DnXs\",\"errorMessage\":\"Greeting_errorMessage__3IyNt\",\"input\":\"Greeting_input__2nrgJ\",\"nameInput\":\"Greeting_nameInput__1sDOB\",\"nameButton\":\"Greeting_nameButton__2A18K\",\"countName\":\"Greeting_countName__2EpDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemPost\":\"Message_itemPost__1HlZ9\",\"itemAvatar\":\"Message_itemAvatar__3dfF_\",\"itemName\":\"Message_itemName__30KHS\",\"itemMessenger\":\"Message_itemMessenger__EPMwc\",\"itemTime\":\"Message_itemTime__32aka\",\"itemText\":\"Message_itemText__dHZUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3vAMM\",\"superInput\":\"SuperInputText_superInput__ft-y9\",\"errorInput\":\"SuperInputText_errorInput__26TXX\",\"error\":\"SuperInputText_error__16V-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2XD7o\",\"column\":\"HW4_column__BQMD0\",\"disabled\":\"HW4_disabled__3wA2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultButton\":\"SuperButton_defaultButton__SU1tF\",\"redButton\":\"SuperButton_redButton__3d-Om\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__36Cco\",\"checkbox\":\"SuperCheckbox_checkbox__15wSa\",\"spanClassName\":\"SuperCheckbox_spanClassName__3PpKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__V4Twl\",\"container\":\"App_container__1ai6W\",\"error\":\"App_error__1O2ol\",\"errorMessage\":\"App_errorMessage__31kRM\",\"nameInput\":\"App_nameInput__ual6d\",\"nameButton\":\"App_nameButton__2Y1cu\",\"countName\":\"App_countName__d32Sn\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    timeMessage: string\r\n}\r\n\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={s.itemPost}>\r\n            <div className={s.itemAvatar}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            <div className={s.itemText}>\r\n                <div className={s.itemName}>{props.name}</div>\r\n                <div className={s.itemMessenger}>{props.message}</div>\r\n                <div className={s.itemTime}>{props.timeMessage}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT8y3RfblbjiofXA2FONXnv1-pTiyLSzXVudF5A1kUoWq5FS7IK&usqp=CAU',\r\n    name: 'Kravchenko Tanya',\r\n    message: 'How are you? I\\'ts my first post! How are you? I\\'ts my first post!',\r\n    time: '22:00',\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            homeworks 1\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                timeMessage={messageData.time}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react';\r\nimport {AffairType} from './HW2';\r\nimport classes from './Affairs.module.css';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: string) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair.id)\r\n    };\r\n    const priorityClasses = classes.AffairItem + ' ' + classes[props.affair.priority]\r\n\r\n    return (\r\n        <div className={classes.AffairWrapper}>\r\n            <div className={classes.AffairItem}>{props.affair.title}</div>\r\n            <div className={priorityClasses}>{props.affair.priority}</div>\r\n            <div className={classes.AffairItem}>\r\n                <button\r\n                    className={classes.RemoveButton}\r\n                    onClick={deleteCallback}>\r\n                    Remove\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from 'react';\r\nimport Affair from './Affair';\r\nimport {AffairType, FilterType} from './HW2';\r\nimport classes from './Affairs.module.css';\r\n\r\ntype AffairsPropsType = {\r\n    title: string;\r\n    data: Array<AffairType>;\r\n    setFilter: (filter: FilterType) => void;\r\n    deleteAffairCallback: (id: string) => void;\r\n    filter: FilterType;\r\n};\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a.id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ));\r\n    const onAllChangeFilter = () => props.setFilter('All');\r\n    const onHighChangeFilter = () => props.setFilter('High');\r\n    const onMiddleChangeFilter = () => props.setFilter('Middle');\r\n    const onLowChangeFilter = () => props.setFilter('Low');\r\n\r\n    const onAllFilter = props.filter === 'All' ? classes.active : '';\r\n    const onHighFilter = props.filter === 'High' ? classes.active : '';\r\n    const onMiddleFilter = props.filter === 'Middle' ? classes.active : '';\r\n    const onLowFilter = props.filter === 'Low' ? classes.active : '';\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.AffairsContainer}>\r\n                <h3 className={classes.AffairsHeader}>{props.title}</h3>\r\n                <div className={classes.MappedAffairs}>{mappedAffairs}</div>\r\n                <div className={classes.TaskButton}>\r\n                    <button onClick={onAllChangeFilter} className={onAllFilter}>\r\n                        All\r\n                    </button>\r\n                    <button onClick={onHighChangeFilter} className={onHighFilter}>\r\n                        High\r\n                    </button>\r\n                    <button onClick={onMiddleChangeFilter} className={onMiddleFilter}>\r\n                        Middle\r\n                    </button>\r\n                    <button onClick={onLowChangeFilter} className={onLowFilter}>\r\n                        Low\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from 'react';\r\nimport Affairs from './Affairs';\r\nimport {v1} from 'uuid';\r\n\r\nexport type AffairPriorityType = 'High' | 'Middle' | 'Low'\r\n\r\nexport type AffairType = {\r\n    id: string\r\n    title: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'All' | AffairPriorityType;\r\n\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {id: v1(), title: 'Tasty', priority: 'Low'},\r\n    {id: v1(), title: 'Friends', priority: 'High'},\r\n    {id: v1(), title: 'Shopping', priority: 'Low'},\r\n    {id: v1(), title: 'Travels', priority: 'Middle'},\r\n    {id: v1(), title: 'Family', priority: 'High'}\r\n];\r\n\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'All') return affairs\r\n    else return affairs.filter(a => a.priority === filter)\r\n\r\n    // if (filter === 'High') {\r\n    //     return affairs.filter(task => task.priority === 'High')\r\n    // }\r\n    // if (filter === 'Middle') {\r\n    //     return affairs.filter(task => task.priority === 'Middle')\r\n    // }\r\n    // if (filter === 'Low') {\r\n    //     return affairs.filter(task => task.priority === 'Low')\r\n    // } else return affairs;\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, id: string): Array<AffairType> => {\r\n    return affairs.filter(t => t.id != id);\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>('All');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (id: string) => setAffairs(deleteAffair(affairs, id));\r\n    return (\r\n        <div>\r\n            homeworks 2\r\n            <Affairs\r\n                title={'TodoList'}\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from \"./Greeting.module.css\";\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingPropsType = {\r\n    users: Array<UserType>\r\n    name: string\r\n    error: string | null\r\n    onTitleChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPressAddItem: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onAddItemClick: () =>  void\r\n    setError: (error: string | null) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {users,name, error, onTitleChange, onKeyPressAddItem, onAddItemClick, setError} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = `${error ? s.error : s.nameInput} ${s.input}`;\r\n\r\n    return (\r\n        <div onBlur={() => setError(null)}>\r\n            <input\r\n                className={inputClass}\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={onTitleChange}\r\n                onKeyPress={onKeyPressAddItem}\r\n            />\r\n            <button className={s.nameButton} onClick={onAddItemClick}>name</button>\r\n            {<div className={s.errorMessage}>{error}</div>}\r\n            <span className={s.countName}>countName: {users.length}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport Greeting from './Greeting';\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    let [name, setName] = useState<string>('');\r\n    let [error, setError] = useState<string | null>(null);\r\n\r\n    function sayHallo(name: string) {\r\n        if (name) {\r\n            alert('Hi ' + name);\r\n            addUserCallback(name);\r\n        }\r\n        setName('');\r\n    }\r\n\r\n    const onAddItemClick = () => {\r\n        if (name.trim() !== '') {\r\n            sayHallo(name);\r\n        } else {\r\n            setError('Title is required')\r\n        }\r\n    }\r\n    const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const onKeyPressAddItem = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            onAddItemClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Greeting\r\n            users={users}\r\n            name={name}\r\n            onTitleChange={onTitleChange}\r\n            error={error}\r\n            onKeyPressAddItem={onKeyPressAddItem}\r\n            onAddItemClick={onAddItemClick}\r\n            setError={setError}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport {v1} from 'uuid';\r\nimport s from './Greeting.module.css'\r\n\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let recordName = {_id: v1(), name: name}\r\n        setUsers([...users, recordName])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <div className={s.greetingContainer}>\r\n                <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            </div>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport s from './SuperInputText.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === 'Enter' // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <span className={finalSpanClassName}>{error}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, disabled,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.redButton : s.defaultButton}  ${s.defaultButton}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    placeholder={'Введи текст'}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                    placeholder={'Проверка смешивания классов'}\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled className={s.disabled}>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Hello!!! {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            <div>react homeworks:</div>\r\n            <div className={s.container}>\r\n                <HW1/>\r\n                <HW2/>\r\n                <HW3/>\r\n                <HW4/>\r\n                {/*<HW5/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}